'''Создайте класс Черепашка, который хранит позиции x и y черепашки, а также s - количество клеточек,
на которое она перемещается за ход

у этого класс есть методы:

go_up() - увеличивает y на s
go_down() - уменьшает y на s
go_left() - уменьшает x на s
go_right() - увеличивает y на s
evolve() - увеличивает s на 1
degrade() - уменьшает s на 1 или выкидывает ошибку, когда s может стать ≤ 0
count_moves(x2, y2) - возвращает минимальное количество действий, за которое черепашка сможет добраться
до x2 y2 от текущей позиции'''

class Черепашка:
    def __init__(self, x, y, s,):
        self.x = x
        self.y = y
        self.s = s
        self.travel = 0

    def go_up(self): # увеличивает y на s
        self.y += self.s
        print(f'Координаты черепашки:\n X{self.x}; Y{self.y}\nКлеток за ход {self.s}')
        return self.y
    
    def go_down(self): # уменьшает y на s
        self.y -= self.s
        print(f'Координаты черепашки:\n X{self.x}; Y{self.y}\nКлеток за ход {self.s}')
        return self.y
    
    def go_left(self): # уменьшает x на s
        self.x -= self.s
        print(f'Координаты черепашки:\n X{self.x}; Y{self.y}\nКлеток за ход {self.s}')
        return self.x
    
    def go_right(self): # увеличивает x на s
        self.y += self.s
        print(f'Координаты черепашки:\n X{self.x}; Y{self.y}\nКлеток за ход {self.s}')
        return self.y

    def evolve(self): # увеличивает s на 1
        self.s += 1
        print(f'Координаты черепашки:\n X{self.x}; Y{self.y}\nКлеток за ход {self.s}')
        return self.s
     
    def degrade(self): # уменьшает s на 1 или выкидывает ошибку, когда s может стать ≤ 0
        if self.s <= 0:
            print('Ошибку! s стала ≤ 0')
        else:
            self.s -= 1
        print(f'Координаты черепашки:\n X{self.x}; Y{self.y}\nКлеток за ход {self.s}')
        return self.s

    def count_moves(self, x2, y2): # возвращает минимальное количество действий, за которое черепашка сможет добраться до x2 y2 от текущей позиции
        self.travel = x2 + y2
        print(f'Минимальное количество действий, за которое черепашка сможет добраться до X{x2} Y{y2} от текущей позиции:\n{self.travel}')
        print(f'Координаты черепашки:\n X{self.x}; Y{self.y}\nКлеток за ход {self.s}')
        return self.travel
X = int(input('Укажите место положение черепашки по оси "X":\n'))
Y = int(input('Укажите место положение черепашки по оси "У":\n'))
S = int(input('Укажите количесто клеток которые черепашка делает за ход:\n'))
Travel = Черепашка(X, Y, S)
print(f'\n"Вперёд" - перемещение по оси Y вверх на {S} клеток\n"Назад" - перемещение по оси Y вниз на {S} клеток\n"Налево" - перемещение по оси X в левую сторону на {S} клеток\n"Направо" - перемещение по оси X в правую сторону на {S} клеток\n"Усилить" - увеличить колличество клеток пройденых за один ход\n"Ослабить" - уменьшить колличество клеток пройденых за один ход\n"До цели" - возвращает минимальное количество действий, за которое черепашка сможет добраться до x2 y2 от текущей позиции\n"?" - комманды\n"Esc" - завершение программы\n\n')
while True:
    command = input('Введите команду: ')
    if (command == "Вперёд") or (command == "вперёд"):
        Travel.go_up()
    elif (command == "Назад") or (command == "назад"):
        Travel.go_down()
    elif (command == "Налево") or (command == "налево"):
        Travel.go_left()
    elif (command == "Направо") or (command == "направо"):
        Travel.go_right()
    elif (command == "Усилить") or (command == "усилить"):
        Travel.evolve()
    elif (command == "Ослабить") or (command == "oслабить"):
        Travel.degrade()
    elif (command == "До цели") or (command == "до цели"):
        X2 = int(input('Укажите координату "Х", цели: '))
        Y2 = int(input('Укажите координату "Y", цели: '))
        Travel.count_moves(X2, Y2)
    elif command == "?":
        print('"Вперёд" - перемещение по оси Y вверх на {S} клеток\n"Назад" - перемещение по оси Y вниз на {S} клеток\n"Налево" - перемещение по оси X в левую сторону на {S} клеток\n"Направо" - перемещение по оси X в правую сторону на {S} клеток\n"Усилить" - увеличить колличество клеток пройденых за один ход\n"Ослабить" - уменьшить колличество клеток пройденых за один ход\n"До цели" - возвращает минимальное количество действий, за которое черепашка сможет добраться до x2 y2 от текущей позиции\n"?" - комманды\n"Esc" - завершение программы\n\n')
    elif (command == "Esc") or (command == "esc"):
        break